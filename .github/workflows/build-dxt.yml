name: Build DXT Packages

# This workflow can be triggered manually from the Actions tab on GitHub
on:
  workflow_dispatch:

jobs:
  build:
    # Use a build matrix to run the job on all three major operating systems
    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          # This version should match the 'requires-python' in pyproject.toml
          python-version: '3.11' 
          cache: 'pip'

      - name: Install dependencies (for the script itself if needed)
        run: pip install --upgrade pip

      - name: Run Python script to prepare the build directory
        run: python prepare-DXT.py

      - name: Install DXT CLI
        run: npm install -g @anthropic-ai/dxt

      - name: Pack the extension (Windows)
        if: runner.os == 'Windows'
        id: pack-win
        run: |
          $env:DXT_FILENAME="mcp-simple-timeserver-Windows.dxt"
          dxt pack ./dxt_build "$env:DXT_FILENAME"
          echo "dxt_filename=$env:DXT_FILENAME" >> $env:GITHUB_OUTPUT

      - name: Pack the extension (macOS & Linux)
        if: runner.os != 'Windows'
        id: pack-unix
        run: |
          DXT_FILENAME="mcp-simple-timeserver-${{ runner.os }}.dxt"
          dxt pack ./dxt_build "./${DXT_FILENAME}"
          echo "dxt_filename=${DXT_FILENAME}" >> $GITHUB_OUTPUT

      - name: Upload DXT artifact
        uses: actions/upload-artifact@v4
        with:
          name: dxt-package-${{ runner.os }}
          path: ./${{ steps.pack-win.outputs.dxt_filename || steps.pack-unix.outputs.dxt_filename }} 